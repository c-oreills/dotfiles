# Default to human readable figures
alias df='df -h'
alias du='du -h'

# Handy shell opener
alias go='gnome-open'

# ack
alias ack='ack-grep'
alias ackl='ack-grep --pager="less -R"'
alias ak='ack-grep --python --coffee --clojure'

# Git aliases
function git() {~/.bin/hub $@}
alias ga='git add'
alias gap='git add -p'
alias gp='git push'
alias gpo='git push origin -u `git rev-parse --abbrev-ref HEAD`'
alias gl='git log'
alias gs='git status'
alias gst='git stash'
alias gsp='git stash pop'
alias gd='git diff'
alias gdc='git diff --cached'
alias gm='git commit -m'
alias gma='git commit -am'
alias gmm='git commit --amend'
alias gb='git branch'
alias gc='git checkout'
alias gcl='git clone'
alias gf='git fetch'
alias gfo='git fetch origin'
alias gr='git merge'
alias grf='git merge --ff-only'
alias gri='git rebase -i'
alias gcp='git cherry-pick'

# Django
alias m='./manage.py'
alias mt='./manage.py test'
alias ms='./manage.py shell'

# Git log pipe to tig
function glt () { git log --format="format:commit %H %s" $* | tig; }

# Port forwarding
function pf () { screen -d -m -S pf_$1_$2 bash -c "ssh -Nv -L $2:127.0.0.1:$2 $1"; } 
function pfd () { screen -d -m -S pf_$1_$2_$3 bash -c "ssh -Nv -L $2:127.0.0.1:$3 $1"; } 

# Clear .pyc files
function pyclear () { find . -iname '*.pyc' -delete; }

# Git submodule update
function gsu () { pushd $(git rev-parse --show-toplevel) > /dev/null; git submodule sync; git submodule update --init --recursive; popd > /dev/null; }

# Get git repo name
function grepo () { basename $(git rev-parse --show-toplevel); }

# workon this git repo's virtualenv (or make it if it doesn't exist)
function wo () { workon $(grepo) || mkvirtualenv $(grepo); }

# Menu of recent branches or remotes, sorted by commit time, for easy selection
function gcr () {
    if (( $# == 0 )); then
        refpattern=refs/heads/
    else
        refpattern="refs/remotes/$1/"
    fi
    branches=("${(@f)$(git for-each-ref --sort=-committerdate --format '%(refname:short)~~(%(committerdate:relative))~~%(subject)' --count=9 $refpattern | column -ts'~~'
    )}")
    select branch in $branches; do
        if [ x"$branch" != x"" ]; then
            echo $branch | awk '{print $1}' | xargs git checkout
            return
        fi
    done
}

# tmux colour correction
alias tmx='TERM=xterm-256color tmx'

# terminal emacs
alias emacs='TERM=xterm-256color emacs -nw'

# blog image resizing
function blogimg () { convert $1 -resize 740 $1 }
# blog staging push
alias blogstage='git push staging `git rev-parse --abbrev-ref HEAD`:master'

### Home specific ###
if [ -f ~/.aliases_home ]; then
    . ~/.aliases_home
fi

### Work specific ###
if [ -f ~/.aliases_work ]; then
    . ~/.aliases_work
fi
